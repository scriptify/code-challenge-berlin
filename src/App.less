    @phone: ~ "only screen and (max-width: 767px)";
    @tablet: ~ "only screen and (min-width: 768px)";
    @laptop: ~ "only screen and (min-width: 900px)";
    @desktop: ~ "only screen and (min-width: 1200px)";
    @wide: ~ "only screen and (min-width: 1500px)";
    @import "./flexboxgrid.min.css";
    @import url('https://fonts.googleapis.com/css?family=Montserrat:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i');
    *,
    :after,
    :before {
        box-sizing: border-box;
    }
    
    @font-face {
        font-family: 'maison_neuebook';
        src: url('./maisonneue-book.woff2') format('woff2'), url('./maisonneue-book.woff') format('woff');
        font-weight: normal;
        font-style: normal;
    }
    
    @font-face {
        font-family: 'maison_neuedemi';
        src: url('./maisonneue-demi.woff2') format('woff2'), url('./maisonneue-demi.woff') format('woff');
        font-weight: normal;
        font-style: normal;
    }
    /* Mixin */
    
    .visible {
        visibility: visible;
        opacity: 0.9;
        transition: opacity 0.5s linear;
    }
    
    .hidden {
        visibility: hidden;
        opacity: 0;
        transition: visibility 0s 0.5s, opacity 0.5s linear;
    }
    
    .transition (@prop: all,
    @time: 1s,
    @ease: linear) {
        -webkit-transition: @prop @time @ease;
        -moz-transition: @prop @time @ease;
        -o-transition: @prop @time @ease;
        -ms-transition: @prop @time @ease;
        transition: @prop @time @ease;
    }
    
    .App {
        text-align: center;
        font-family: 'Montserrat', sans-serif;
    }
    
    .App-logo {
        animation: App-logo-spin infinite 20s linear;
        height: 80px;
    }
    
    .App-header {
        background-color: #222;
        height: 150px;
        padding: 20px;
        color: white;
    }
    
    .App-title {
        font-size: 1.5em;
    }
    
    .App-intro {
        font-size: large;
    }
    
    @keyframes App-logo-spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }